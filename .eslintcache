[{"/Users/mickey/my-app/src/index.js":"1","/Users/mickey/my-app/src/ClassComp.js":"2","/Users/mickey/my-app/src/App/App.js":"3","/Users/mickey/my-app/src/App/Home.js":"4","/Users/mickey/my-app/src/App/Styling.js":"5","/Users/mickey/my-app/src/App/Boxes.js":"6","/Users/mickey/my-app/src/App/NotePad.js":"7"},{"size":234,"mtime":1612933668425,"results":"8","hashOfConfig":"9"},{"size":1710,"mtime":1612778916034,"results":"10","hashOfConfig":"9"},{"size":394,"mtime":1613525377143,"results":"11","hashOfConfig":"9"},{"size":359,"mtime":1613879548336,"results":"12","hashOfConfig":"9"},{"size":194,"mtime":1612941742440,"results":"13","hashOfConfig":"9"},{"size":770,"mtime":1613889277032,"results":"14","hashOfConfig":"9"},{"size":3454,"mtime":1613889277039,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1b7hy7k",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/mickey/my-app/src/index.js",[],["33","34"],"/Users/mickey/my-app/src/ClassComp.js",["35"],"import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport ls from 'local-storage'\nclass ClassComp extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            newText: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleLoad = this.handleLoad.bind(this)\n    }\n\n    handleChange(event) {\n       this.setState({\n            newText: event.target.value\n        })\n    }\n    handleSubmit(event){\n        const name = \"name\"\n        const savedText = this.state.newText;\n        const data = [name, savedText]\n        localStorage.setItem('Page', JSON.stringify(data));\n\n    }\n    handleLoad(event) {\n        const Loaded =(localStorage.getItem(JSON.parse('Page')))\n         this.setState(\n            {newText: Loaded[1]}\n         )\n    }\n    render(){\n        return(\n            <div>\n                <form>\n                    <textarea\n                        value={this.state.newText}\n                        onChange={this.handleChange}\n                        placeholder=\"Write some text...\"\n                        rows=\"30\"\n                        cols=\"150\"\n                    />\n                </form>\n                <button className=\"click1\">\n                    <Link to=\"/\" className=\"buttonText\">Go Home</Link>\n                </button>\n                <button className=\"click2\" onClick={this.handleSubmit}>\n                    Save Note\n                </button>\n                <button className=\"click1\" onClick={this.handleLoad}>\n                    Load Note\n                </button>\n            </div>\n        )\n    }\n}\nexport default ClassComp","/Users/mickey/my-app/src/App/App.js",[],"/Users/mickey/my-app/src/App/Home.js",["36","37","38","39","40"],"/Users/mickey/my-app/src/App/Styling.js",[],"/Users/mickey/my-app/src/App/Boxes.js",["41"],"/Users/mickey/my-app/src/App/NotePad.js",["42","43"],"//TODO: Change file name and update throughout app\nimport React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom'\nimport Modal from 'react-modal';\nexport function NotePad(){\n    //Set\n    const [text,setText]=useState(\"\")\n    const [fileName, myFile] = useState(\"\")\n    const [open, setWindow] = useState(false)\n    const [saveArray, updateSave] = useState([])\n    function handleChange(event){\n        setText(event.target.value);\n    }\n\n    function handleFileChange(event){\n        myFile(event.target.value);\n    }\n    // Changes value of text in textbox\n\n    function handleModal(event){\n        setWindow(!open);\n    }\n    // Opens Modal for saving and loading\n\n    function handleSubmit(event){\n        if(fileName===\"\"){\n            alert(\"Please enter valid file name.\")\n        }\n        else{\n        const id = new Date().valueOf()\n        const data = {fileName, text, id}\n        saveArray.push(data)\n        localStorage.setItem(\"Save List\",JSON.stringify(saveArray))\n        localStorage.setItem(fileName,JSON.stringify(data))\n        setWindow(!open);}\n    }\n    // Saves objects of name, text, and id to an array in localstorage\n    // Currently also saves File name/text pairs as their own object items in local storage\n    // Creates an alert for empty save names\n\n    function handleLoading(event){\n        const item = JSON.parse(localStorage.getItem(fileName));\n        setText(item.text)\n        setWindow(false);\n    }\n    function wipeSave(event){\n        updateSave([])\n    }\n    return(\n        <div>        \n            <form>\n                    <textarea\n                        value={text}\n                        onChange={handleChange}\n                        placeholder=\"Write some text...\"\n                        rows=\"30\"\n                        cols=\"150\"\n                    />\n                </form>\n                {/* Text Box */}\n                \n                <button\n                    className=\"click1\"\n                    onClick={handleModal}\n                >\n                        Save/Load\n                </button>\n                {/* Opens Modal */}\n\n\n                <Modal\n                isOpen = {open}\n                onRequestClose = {handleModal}\n                className=\"modal\">\n                    <div className=\"modalContent\">\n                        <form>\n                            <input type =\"text\" placeholder=\"File Name\" value={fileName} onChange={handleFileChange}/>\n                        </form>\n                        <button className=\"click2\" onClick={handleSubmit}>Save</button>\n                        <button className=\"click1\" onClick={handleLoading}> Load</button>\n                        <button className=\"click2\" onClick = {handleModal}>Close</button>                        \n                        </div>\n                </Modal>\n\n\n\n                <button className=\"click2\"><Link to=\"/\" className=\"buttonText\">Home</Link></button>\n                <button className=\"click3\" onClick = {wipeSave}>Clear</button>\n                <div className=\"displayNotes\">\n                    {saveArray.map(note=>(\n                        <div onClick={handleLoading} className=\"savedNote\">\n                            <h3 className=\"noteHeader\">{note.fileName}</h3>\n                            <p>{note.text}</p>\n                        </div>\n                    ))}\n                </div>\n        </div>\n    )\n}\nexport default NotePad;\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":10},{"ruleId":"48","severity":1,"message":"52","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},{"ruleId":"48","severity":1,"message":"53","line":2,"column":9,"nodeType":"50","messageId":"51","endLine":2,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":10},{"ruleId":"48","severity":1,"message":"54","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":17},{"ruleId":"48","severity":1,"message":"55","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":13},{"ruleId":"48","severity":1,"message":"52","line":1,"column":15,"nodeType":"50","messageId":"51","endLine":1,"endColumn":23},{"ruleId":"48","severity":1,"message":"56","line":2,"column":16,"nodeType":"50","messageId":"51","endLine":2,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":44,"column":46,"nodeType":"59","messageId":"60","endLine":44,"endColumn":48},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'ls' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'ClassComp' is defined but never used.","'Modal' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]